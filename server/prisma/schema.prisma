generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

enum Role {
  User
  Admin
  Owner
}

model User {
  uid       Int      @id @default(autoincrement())
  name      String
  phone     String?
  email     String   @unique
  password  String
  address   String?
  role      Role     @default(User)
  wallets   Wallet[]
  transactions Transaction[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Wallet {
  wallet_id Int      @id @default(autoincrement())
  name      String
  number    String   @unique
  balance   Float    @default(0)
  desc      String?
  exp_date  DateTime?
  user      User     @relation(fields: [uid], references: [uid], onDelete: Cascade)
  uid    Int
  transactions Transaction[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Transaction {
  trans_id    Int      @id @default(autoincrement())
  user        User?    @relation(fields: [uid], references: [uid])
  uid      Int?
  wallet      Wallet   @relation(fields: [wallet_id], references: [wallet_id], onDelete: Cascade)
  wallet_id   Int
  value       Float
  category    Category @relation(fields: [category_id], references: [category_id])
  category_id Int
  description String
  date        DateTime
  confirmed   Boolean   @default(false)
  confirmedBy Int?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Category {
  category_id Int      @id @default(autoincrement())
  name        String   
  transactions Transaction[]
}

model Type {
  type_id     Int     @id @default(autoincrement())
  name        String  
}